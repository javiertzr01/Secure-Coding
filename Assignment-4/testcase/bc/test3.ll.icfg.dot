digraph "ICFG" {
	label="ICFG";

	Node0x5606c36eb840 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n i8* null \{ constant data \}\nAddrStmt: [Var11 \<-- Var12]  \n i32 1 \{ constant data \}\nAddrStmt: [Var46 \<-- Var47]  \n i32 2 \{ constant data \}\nAddrStmt: [Var51 \<-- Var52]  \n i32 0 \{ constant data \}\nAddrStmt: [Var4 \<-- Var5]  \nFunction: test \nAddrStmt: [Var37 \<-- Var38]  \nFunction: svf_assert \nAddrStmt: [Var55 \<-- Var56]  \nFunction: main }"];
	Node0x5606c36eb840 -> Node0x5606c363b2b0[style=solid];
	Node0x5606c363bd50 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: test\}}"];
	Node0x5606c363bd50 -> Node0x5606c36eb970[style=solid];
	Node0x5606c36eb970 [shape=record,color=black,label="{IntraICFGNode2 \{fun: test\}\nAddrStmt: [Var9 \<-- Var10]  \n   %a.addr = alloca i32, align 4 }"];
	Node0x5606c36eb970 -> Node0x5606c36ebc10[style=solid];
	Node0x5606c36ebc10 [shape=record,color=black,label="{IntraICFGNode3 \{fun: test\}\nAddrStmt: [Var13 \<-- Var14]  \n   %b.addr = alloca i32, align 4 }"];
	Node0x5606c36ebc10 -> Node0x5606c36ebd60[style=solid];
	Node0x5606c36ebd60 [shape=record,color=black,label="{IntraICFGNode4 \{fun: test\}\nAddrStmt: [Var15 \<-- Var16]  \n   %x = alloca i32, align 4 }"];
	Node0x5606c36ebd60 -> Node0x5606c36e6f60[style=solid];
	Node0x5606c36e6f60 [shape=record,color=black,label="{IntraICFGNode5 \{fun: test\}\nAddrStmt: [Var17 \<-- Var18]  \n   %y = alloca i32, align 4 }"];
	Node0x5606c36e6f60 -> Node0x5606c36e7140[style=solid];
	Node0x5606c36e7140 [shape=record,color=black,label="{IntraICFGNode6 \{fun: test\}\nStoreStmt: [Var9 \<-- Var7]  \n   store i32 %a, i32* %a.addr, align 4 }"];
	Node0x5606c36e7140 -> Node0x5606c36e7320[style=solid];
	Node0x5606c36e7320 [shape=record,color=black,label="{IntraICFGNode7 \{fun: test\}\nStoreStmt: [Var13 \<-- Var8]  \n   store i32 %b, i32* %b.addr, align 4 }"];
	Node0x5606c36e7320 -> Node0x5606c36e9b70[style=solid];
	Node0x5606c36e9b70 [shape=record,color=black,label="{IntraICFGNode8 \{fun: test\}\nStoreStmt: [Var15 \<-- Var11]  \n   store i32 1, i32* %x, align 4 }"];
	Node0x5606c36e9b70 -> Node0x5606c36e9d70[style=solid];
	Node0x5606c36e9d70 [shape=record,color=black,label="{IntraICFGNode9 \{fun: test\}\nStoreStmt: [Var17 \<-- Var11]  \n   store i32 1, i32* %y, align 4 }"];
	Node0x5606c36e9d70 -> Node0x5606c36e9f70[style=solid];
	Node0x5606c36e9f70 [shape=record,color=black,label="{IntraICFGNode10 \{fun: test\}\nLoadStmt: [Var23 \<-- Var9]  \n   %0 = load i32, i32* %a.addr, align 4 }"];
	Node0x5606c36e9f70 -> Node0x5606c36ea170[style=solid];
	Node0x5606c36ea170 [shape=record,color=black,label="{IntraICFGNode11 \{fun: test\}\nLoadStmt: [Var24 \<-- Var13]  \n   %1 = load i32, i32* %b.addr, align 4 }"];
	Node0x5606c36ea170 -> Node0x5606c36ea370[style=solid];
	Node0x5606c36ea370 [shape=record,color=black,label="{IntraICFGNode12 \{fun: test\}\nCmpStmt: [Var25 \<-- (Var23 predicate38 Var24)]  \n   %cmp = icmp sgt i32 %0, %1 }"];
	Node0x5606c36ea370 -> Node0x5606c36e7c80[style=solid];
	Node0x5606c36e7c80 [shape=record,color=black,label="{IntraICFGNode13 \{fun: test\}\nBranchStmt: [Condition Var25]\nSuccessor 0 ICFGNode14   Successor 1 ICFGNode15   \n   br i1 %cmp, label %if.then, label %if.else }"];
	Node0x5606c36e7c80 -> Node0x5606c36e7ea0[style=solid];
	Node0x5606c36e7c80 -> Node0x5606c36e8080[style=solid];
	Node0x5606c36e7ea0 [shape=record,color=black,label="{IntraICFGNode14 \{fun: test\}\nLoadStmt: [Var27 \<-- Var15]  \n   %2 = load i32, i32* %x, align 4 }"];
	Node0x5606c36e7ea0 -> Node0x5606c36e8370[style=solid];
	Node0x5606c36e8080 [shape=record,color=black,label="{IntraICFGNode15 \{fun: test\}\nLoadStmt: [Var41 \<-- Var15]  \n   %6 = load i32, i32* %x, align 4 }"];
	Node0x5606c36e8080 -> Node0x5606c36e8660[style=solid];
	Node0x5606c36e8370 [shape=record,color=black,label="{IntraICFGNode16 \{fun: test\}\nBinaryOPStmt: [Var28 \<-- (Var27 opcode13 Var11)]  \n   %inc = add nsw i32 %2, 1 }"];
	Node0x5606c36e8370 -> Node0x5606c36e8db0[style=solid];
	Node0x5606c36e8660 [shape=record,color=black,label="{IntraICFGNode17 \{fun: test\}\nBinaryOPStmt: [Var42 \<-- (Var41 opcode13 Var11)]  \n   %inc3 = add nsw i32 %6, 1 }"];
	Node0x5606c36e8660 -> Node0x5606c36e8fb0[style=solid];
	Node0x5606c36e8db0 [shape=record,color=black,label="{IntraICFGNode18 \{fun: test\}\nStoreStmt: [Var15 \<-- Var28]  \n   store i32 %inc, i32* %x, align 4 }"];
	Node0x5606c36e8db0 -> Node0x5606c36e91b0[style=solid];
	Node0x5606c36e8fb0 [shape=record,color=black,label="{IntraICFGNode19 \{fun: test\}\nStoreStmt: [Var15 \<-- Var42]  \n   store i32 %inc3, i32* %x, align 4 }"];
	Node0x5606c36e8fb0 -> Node0x5606c36e93b0[style=solid];
	Node0x5606c36e91b0 [shape=record,color=black,label="{IntraICFGNode20 \{fun: test\}\nLoadStmt: [Var30 \<-- Var17]  \n   %3 = load i32, i32* %y, align 4 }"];
	Node0x5606c36e91b0 -> Node0x5606c36e95b0[style=solid];
	Node0x5606c36e93b0 [shape=record,color=black,label="{IntraICFGNode21 \{fun: test\}\nLoadStmt: [Var44 \<-- Var15]  \n   %7 = load i32, i32* %x, align 4 }"];
	Node0x5606c36e93b0 -> Node0x5606c36e97b0[style=solid];
	Node0x5606c36e95b0 [shape=record,color=black,label="{IntraICFGNode22 \{fun: test\}\nBinaryOPStmt: [Var31 \<-- (Var30 opcode13 Var11)]  \n   %inc1 = add nsw i32 %3, 1 }"];
	Node0x5606c36e95b0 -> Node0x5606c36e99b0[style=solid];
	Node0x5606c36e97b0 [shape=record,color=black,label="{IntraICFGNode23 \{fun: test\}\nCmpStmt: [Var45 \<-- (Var44 predicate32 Var46)]  \n   %cmp4 = icmp eq i32 %7, 2 }"];
	Node0x5606c36e97b0 -> Node0x5606c36ed020[style=solid];
	Node0x5606c36e99b0 [shape=record,color=black,label="{IntraICFGNode24 \{fun: test\}\nStoreStmt: [Var17 \<-- Var31]  \n   store i32 %inc1, i32* %y, align 4 }"];
	Node0x5606c36e99b0 -> Node0x5606c36ed350[style=solid];
	Node0x5606c36ed020 [shape=record,color=red,label="{CallICFGNode25 \{fun: test\}}"];
	Node0x5606c36ed020 -> Node0x5606c363bf50[style=solid];
	Node0x5606c363bf50 [shape=record,color=blue,label="{RetICFGNode26 \{fun: test\}}"];
	Node0x5606c363bf50 -> Node0x5606c36ed550[style=solid];
	Node0x5606c36ed350 [shape=record,color=black,label="{IntraICFGNode27 \{fun: test\}\nLoadStmt: [Var33 \<-- Var15]  \n   %4 = load i32, i32* %x, align 4 }"];
	Node0x5606c36ed350 -> Node0x5606c36ed750[style=solid];
	Node0x5606c36ed550 [shape=record,color=black,label="{IntraICFGNode28 \{fun: test\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode30   \n   br label %if.end }"];
	Node0x5606c36ed550 -> Node0x5606c36ed950[style=solid];
	Node0x5606c36ed750 [shape=record,color=black,label="{IntraICFGNode29 \{fun: test\}\nLoadStmt: [Var34 \<-- Var17]  \n   %5 = load i32, i32* %y, align 4 }"];
	Node0x5606c36ed750 -> Node0x5606c36edb50[style=solid];
	Node0x5606c36ed950 [shape=record,color=black,label="{IntraICFGNode30 \{fun: test\}\n   ret i32 0 }"];
	Node0x5606c36ed950 -> Node0x5606c36edd50[style=solid];
	Node0x5606c36edb50 [shape=record,color=black,label="{IntraICFGNode31 \{fun: test\}\nCmpStmt: [Var35 \<-- (Var33 predicate32 Var34)]  \n   %cmp2 = icmp eq i32 %4, %5 }"];
	Node0x5606c36edb50 -> Node0x5606c36edfa0[style=solid];
	Node0x5606c36edd50 [shape=record,color=green,label="{FunExitICFGNode32 \{fun: test\}\nPhiStmt: [Var6 \<-- ([Var51, ICFGNode30],)]  \n   ret i32 0 |{<s0>0x5606c36e2a80}}"];
	Node0x5606c36edd50:s0 -> Node0x5606c3637300[style=solid,color=blue];
	Node0x5606c36edfa0 [shape=record,color=red,label="{CallICFGNode33 \{fun: test\}}"];
	Node0x5606c36edfa0 -> Node0x5606c363d700[style=solid];
	Node0x5606c363d700 [shape=record,color=blue,label="{RetICFGNode34 \{fun: test\}}"];
	Node0x5606c363d700 -> Node0x5606c36ee4b0[style=solid];
	Node0x5606c36ee4b0 [shape=record,color=black,label="{IntraICFGNode35 \{fun: test\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode30   \n   br label %if.end }"];
	Node0x5606c36ee4b0 -> Node0x5606c36ed950[style=solid];
	Node0x5606c363b2b0 [shape=record,color=yellow,label="{FunEntryICFGNode36 \{fun: main\}}"];
	Node0x5606c363b2b0 -> Node0x5606c36ee7e0[style=solid];
	Node0x5606c36ee7e0 [shape=record,color=black,label="{IntraICFGNode37 \{fun: main\}\nAddrStmt: [Var58 \<-- Var59]  \n   %retval = alloca i32, align 4 }"];
	Node0x5606c36ee7e0 -> Node0x5606c36eea30[style=solid];
	Node0x5606c36eea30 [shape=record,color=black,label="{IntraICFGNode38 \{fun: main\}\nAddrStmt: [Var60 \<-- Var61]  \n   %a = alloca i32, align 4 }"];
	Node0x5606c36eea30 -> Node0x5606c36eec10[style=solid];
	Node0x5606c36eec10 [shape=record,color=black,label="{IntraICFGNode39 \{fun: main\}\nAddrStmt: [Var62 \<-- Var63]  \n   %b = alloca i32, align 4 }"];
	Node0x5606c36eec10 -> Node0x5606c36eedf0[style=solid];
	Node0x5606c36eedf0 [shape=record,color=black,label="{IntraICFGNode40 \{fun: main\}\nStoreStmt: [Var58 \<-- Var51]  \n   store i32 0, i32* %retval, align 4 }"];
	Node0x5606c36eedf0 -> Node0x5606c36eefd0[style=solid];
	Node0x5606c36eefd0 [shape=record,color=black,label="{IntraICFGNode41 \{fun: main\}\nStoreStmt: [Var60 \<-- Var11]  \n   store i32 1, i32* %a, align 4 }"];
	Node0x5606c36eefd0 -> Node0x5606c36ef1b0[style=solid];
	Node0x5606c36ef1b0 [shape=record,color=black,label="{IntraICFGNode42 \{fun: main\}\nStoreStmt: [Var62 \<-- Var46]  \n   store i32 2, i32* %b, align 4 }"];
	Node0x5606c36ef1b0 -> Node0x5606c36ef390[style=solid];
	Node0x5606c36ef390 [shape=record,color=black,label="{IntraICFGNode43 \{fun: main\}\nLoadStmt: [Var67 \<-- Var60]  \n   %0 = load i32, i32* %a, align 4 }"];
	Node0x5606c36ef390 -> Node0x5606c36ef570[style=solid];
	Node0x5606c36ef570 [shape=record,color=black,label="{IntraICFGNode44 \{fun: main\}\nLoadStmt: [Var68 \<-- Var62]  \n   %1 = load i32, i32* %b, align 4 }"];
	Node0x5606c36ef570 -> Node0x5606c36e81c0[style=solid];
	Node0x5606c36e81c0 [shape=record,color=red,label="{CallICFGNode45 \{fun: main\}\nCallPE: [Var7 \<-- Var67]  \n   %call = call i32 @test(i32 %0, i32 %1) \nCallPE: [Var8 \<-- Var68]  \n   %call = call i32 @test(i32 %0, i32 %1) |{<s0>0x5606c36e2a80}}"];
	Node0x5606c36e81c0:s0 -> Node0x5606c363bd50[style=solid,color=red];
	Node0x5606c3637300 [shape=record,color=blue,label="{RetICFGNode46 \{fun: main\}\nRetPE: [Var69 \<-- Var6]  \n   %call = call i32 @test(i32 %0, i32 %1) }"];
	Node0x5606c3637300 -> Node0x5606c36ef9d0[style=solid];
	Node0x5606c36ef9d0 [shape=record,color=black,label="{IntraICFGNode47 \{fun: main\}\n   ret i32 0 }"];
	Node0x5606c36ef9d0 -> Node0x5606c36efbb0[style=solid];
	Node0x5606c36efbb0 [shape=record,color=green,label="{FunExitICFGNode48 \{fun: main\}\nPhiStmt: [Var57 \<-- ([Var51, ICFGNode47],)]  \n   ret i32 0 }"];
}
